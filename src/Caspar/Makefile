#############################################################################
# Makefile for building: libcaspar.so.1.0.0
# Generated by qmake (2.01a) (Qt 4.8.2) on: Sat Nov 22 15:17:12 2014
# Project:  Caspar.pro
# Template: lib
# Command: /usr/bin/qmake-qt4 -spec /usr/share/qt4/mkspecs/linux-g++ -o Makefile Caspar.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DCASPAR_LIBRARY -DQT_NO_DEBUG -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT -fPIC $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT -fPIC $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtNetwork -I/usr/include/qt4 -I../Common -I../Common -I.
LINK          = g++
LFLAGS        = -Wl,-O1 -shared -Wl,-soname,libcaspar.so.1
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu -L/home/sysnova/Documents/Client-master/src/Caspar/../Common/ -lcommon -lQtNetwork -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = CasparDevice.cpp \
		Models/CasparThumbnail.cpp \
		Models/CasparTemplate.cpp \
		Models/CasparMedia.cpp \
		Models/CasparData.cpp \
		AmcpDevice.cpp moc_CasparDevice.cpp \
		moc_AmcpDevice.cpp
OBJECTS       = CasparDevice.o \
		CasparThumbnail.o \
		CasparTemplate.o \
		CasparMedia.o \
		CasparData.o \
		AmcpDevice.o \
		moc_CasparDevice.o \
		moc_AmcpDevice.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		Caspar.pro
QMAKE_TARGET  = caspar
DESTDIR       = 
TARGET        = libcaspar.so.1.0.0
TARGETA       = libcaspar.a
TARGETD       = libcaspar.so.1.0.0
TARGET0       = libcaspar.so
TARGET1       = libcaspar.so.1
TARGET2       = libcaspar.so.1.0

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile  $(TARGET)

$(TARGET):  $(OBJECTS) $(SUBLIBS) $(OBJCOMP)  
	-$(DEL_FILE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(LIBS) $(OBJCOMP)
	-ln -s $(TARGET) $(TARGET0)
	-ln -s $(TARGET) $(TARGET1)
	-ln -s $(TARGET) $(TARGET2)



staticlib: $(TARGETA)

$(TARGETA):  $(OBJECTS) $(OBJCOMP) 
	-$(DEL_FILE) $(TARGETA) 
	$(AR) $(TARGETA) $(OBJECTS)

Makefile: Caspar.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/x86_64-linux-gnu/libQtNetwork.prl \
		/usr/lib/x86_64-linux-gnu/libQtCore.prl
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ -o Makefile Caspar.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/x86_64-linux-gnu/libQtNetwork.prl:
/usr/lib/x86_64-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ -o Makefile Caspar.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/caspar1.0.0 || $(MKDIR) .tmp/caspar1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/caspar1.0.0/ && $(COPY_FILE) --parents CasparDevice.h Shared.h Models/CasparThumbnail.h Models/CasparTemplate.h Models/CasparMedia.h Models/CasparData.h AmcpDevice.h .tmp/caspar1.0.0/ && $(COPY_FILE) --parents CasparDevice.cpp Models/CasparThumbnail.cpp Models/CasparTemplate.cpp Models/CasparMedia.cpp Models/CasparData.cpp AmcpDevice.cpp .tmp/caspar1.0.0/ && (cd `dirname .tmp/caspar1.0.0` && $(TAR) caspar1.0.0.tar caspar1.0.0 && $(COMPRESS) caspar1.0.0.tar) && $(MOVE) `dirname .tmp/caspar1.0.0`/caspar1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/caspar1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) $(TARGET0) $(TARGET1) $(TARGET2) $(TARGETA)
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_CasparDevice.cpp moc_AmcpDevice.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_CasparDevice.cpp moc_AmcpDevice.cpp
moc_CasparDevice.cpp: Shared.h \
		AmcpDevice.h \
		Models/CasparData.h \
		Models/CasparMedia.h \
		Models/CasparTemplate.h \
		Models/CasparThumbnail.h \
		CasparDevice.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) CasparDevice.h -o moc_CasparDevice.cpp

moc_AmcpDevice.cpp: Shared.h \
		AmcpDevice.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) AmcpDevice.h -o moc_AmcpDevice.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

CasparDevice.o: CasparDevice.cpp CasparDevice.h \
		Shared.h \
		AmcpDevice.h \
		Models/CasparData.h \
		Models/CasparMedia.h \
		Models/CasparTemplate.h \
		Models/CasparThumbnail.h \
		../Common/Timecode.h \
		../Common/Shared.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o CasparDevice.o CasparDevice.cpp

CasparThumbnail.o: Models/CasparThumbnail.cpp Models/CasparThumbnail.h \
		Shared.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o CasparThumbnail.o Models/CasparThumbnail.cpp

CasparTemplate.o: Models/CasparTemplate.cpp Models/CasparTemplate.h \
		Shared.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o CasparTemplate.o Models/CasparTemplate.cpp

CasparMedia.o: Models/CasparMedia.cpp Models/CasparMedia.h \
		Shared.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o CasparMedia.o Models/CasparMedia.cpp

CasparData.o: Models/CasparData.cpp Models/CasparData.h \
		Shared.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o CasparData.o Models/CasparData.cpp

AmcpDevice.o: AmcpDevice.cpp AmcpDevice.h \
		Shared.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o AmcpDevice.o AmcpDevice.cpp

moc_CasparDevice.o: moc_CasparDevice.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_CasparDevice.o moc_CasparDevice.cpp

moc_AmcpDevice.o: moc_AmcpDevice.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_AmcpDevice.o moc_AmcpDevice.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

